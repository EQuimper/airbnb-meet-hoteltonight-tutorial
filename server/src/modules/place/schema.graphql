type PlaceLocation {
  address: String!
  lat: Int!
  lng: Int!
}

type Place {
  _id: ID!
  name: String!
  description: String
  bedroom: Int!
  bathroom: Int!
  location: PlaceLocation!
  price: Int!
  haveInternet: Boolean!
  haveAirCond: Boolean!
  haveHeating: Boolean!
  haveTv: Boolean!
  isActive: Boolean!
  maxGuest: Int!

  owner: User!

  createdAt: String!
  updatedAt: String!
}

input PlaceLocationInput {
  address: String!
  lat: Int!
  lng: Int!
}

input CreatePlaceInput {
  name: String!
  description: String
  bedroom: Int!
  bathroom: Int!
  location: PlaceLocationInput!
  price: Int!
  haveInternet: Boolean!
  haveAirCond: Boolean!
  haveHeating: Boolean!
  haveTv: Boolean!
  maxGuest: Int!
}

type Query {
  place(id: ID!): Place!
  getOwnerPlaces: [Place]!
}

type Mutation {
  makePlaceInactive(id: ID!): Place!
  createPlace(input: CreatePlaceInput!): Place!
}
